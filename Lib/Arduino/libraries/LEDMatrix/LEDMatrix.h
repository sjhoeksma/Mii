/**
 * LED Matrix library for http://www.seeedstudio.com/depot/ultrathin-16x32-red-led-matrix-panel-p-1582.html
 * The LED Matrix panel has 32x16 pixels. Several panel can be combined together as a large screen.
 *
 * Coordinate & Connection (Arduino -> panel 0 -> panel 1 -> ...)
 *   (0, 0)                                     (0, 0)
 *     +--------+--------+--------+               +--------+--------+
 *     |   5    |    4   |    3   |               |    1   |    0   |
 *     |        |        |        |               |        |        |<----- Arduino
 *     +--------+--------+--------+               +--------+--------+
 *     |   2    |    1   |    0   |                              (64, 16)
 *     |        |        |        |<----- Arduino
 *     +--------+--------+--------+
 *                             (96, 32)
 *  Copyright (c) 2013 Seeed Technology Inc.
 *  @auther     Yihui Xiong
 *  @date       Nov 7, 2013
 *  @license    MIT
 */


#ifndef __LED_MATRIX_H__
#define __LED_MATRIX_H__

#include <Arduino.h>
#include <avr/pgmspace.h>

#define FASTWRITE 1

#define swap(a, b) { int16_t t = a; a = b; b = t; }

class LEDMatrix : public Print  {
public:
    LEDMatrix(uint8_t a, uint8_t b, uint8_t c, uint8_t d, uint8_t oe, uint8_t r1, uint8_t stb, uint8_t clk);

    /**
     * set the display's display buffer and number, the buffer's size must be not less than 512 * number / 8 bytes
     * @param newfont       the font to use
     * @param displaybuf    display buffer
     * @param number        panels' number
     */
    void begin(const unsigned char *newfont,uint8_t *displaybuf, uint16_t width, uint16_t height);

    /**
     * draw a point
     * @param x     x
     * @param y     y
     * @param pixel 0: led off, >0: led on
     */
    void drawPixel(uint16_t x, uint16_t y, uint8_t pixel,bool direct=false);

    /**
     * draw a rect
     * @param (x1, y1)   top-left position
     * @param (x2, y2)   bottom-right position, not included in the rect
     * @param pixel      0: rect off, >0: rect on
     */
    void drawRect(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint8_t pixel);

    /**
     * draw a image
     * @param (xoffset, yoffset)   top-left offset of image
     * @param (width, height)      image's width and height
     * @param pixels     contents, 1 bit to 1 led
     */
    void drawImage(uint16_t xoffset, uint16_t yoffset, uint16_t width, uint16_t height, const uint8_t *image);

    void drawChar(int16_t x, int16_t y, unsigned char c, uint8_t size);
    void drawRect(int16_t x, int16_t y,int16_t w, int16_t h,uint16_t color);

    void setTextSize(uint8_t s);
    void setCursor(int16_t x, int16_t y);
    void display();
    void setDrawbuf(uint8_t *ptr){drawbuf=ptr;}

    /**
     * Set screen buffer to zero
     */
    void clear();

    /**
     * turn off 1/16 leds and turn on another 1/16 leds
     */
    void scan();

    void reverse();

    uint8_t isReversed();

    void on();

    void off();

    #if ARDUINO >= 100
  virtual size_t write(uint8_t);
#else
  virtual void   write(uint8_t);
#endif

  void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);
  void drawLine(int16_t x0, int16_t y0,int16_t x1, int16_t y1,uint16_t color);
  void drawFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color);
  void drawFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color);
  void setFont(const unsigned char *newfont);
  void setRotation(uint8_t r) {rotation = (r & 1);}
  uint8_t getFontWidth(){return (rotation ? fontH : fontW);}
  uint8_t getFontHeight(){return (rotation ? fontW : fontH);}
  uint8_t getFontExtra(){return fontE;}
  uint16_t getX(){return cursor_x;}
  uint16_t getY(){return cursor_y;}

private:
    uint8_t clk, r1, stb, oe, a, b, c, d;
    #if FASTWRITE == 1
    volatile uint8_t *_clk, *_r1, *_stb, *_oe, *_a, *_b, *_c, *_d;
    uint8_t pclk, pr1, pstb, poe, pa, pb, pc, pd;
    #endif
    uint8_t *displaybuf;
    uint8_t *drawbuf;
    uint16_t width;
    uint16_t height;
    uint8_t  mask;
    uint8_t  state;
    int16_t cursor_x, cursor_y;
    uint8_t textsize;
    uint8_t wrap;
    uint8_t rotation;
    const unsigned char *font;
    uint8_t fontW;
    uint8_t fontH;
    uint8_t fontS;
    uint8_t fontE;
};

//Font Files

//minimal_6x5
//tinyfont_8x8
//sinclair_8x8
//digitals_11x8
//small_5x7

const unsigned char minimal_6x5[] PROGMEM ={
  6,5,' ', 1, 0,                     //Width , Height , Start Char, Rotation, space
  0x00,0x00,0x00,0x00,0x00,0x00,  // <space>
  0x08,0x08,0x08,0x00,0x08,0x00,  // !
  0x14,0x14,0x14,0x00,0x00,0x00,  // "
  0x0a,0x1e,0x0a,0x1e,0x0a,0x00,  // #
  0x00,0x00,0x00,0x00,0x00,0x00,  // $
  0x12,0x04,0x08,0x09,0x00,0x00,  // %
  0x00,0x00,0x00,0x00,0x00,0x00,  // &
  0x08,0x08,0x08,0x00,0x00,0x00,  // '
  0x08,0x10,0x10,0x10,0x08,0x00,  // (
  0x10,0x08,0x08,0x08,0x10,0x00,  // )
  0x12,0x0c,0x1e,0x0c,0x12,0x00,  // *
  0x00,0x00,0x10,0x10,0x7c,0x10,  // +
  0x00,0x00,0x08,0x08,0x10,0x00,  // ,
  0x00,0x00,0x1e,0x00,0x00,0x00,  // -
  0x00,0x00,0x00,0x18,0x18,0x00,  // .
  0x04,0x04,0x08,0x08,0x10,0x00,  // /
  0x0c,0x12,0x12,0x12,0x0c,0x00,  // 0
  0x04,0x0c,0x04,0x04,0x0e,0x00,  // 1
  0x1e,0x02,0x0c,0x10,0x1e,0x00,  // 2
  0x1c,0x02,0x0e,0x02,0x1c,0x00,  // 3
  0x12,0x12,0x1e,0x02,0x02,0x00,  // 4
  0x1e,0x10,0x1e,0x02,0x1e,0x00,  // 5
  0x1e,0x10,0x1e,0x12,0x1e,0x00,  // 6
  0x1e,0x02,0x04,0x08,0x08,0x00,  // 7
  0x1e,0x12,0x1e,0x12,0x1e,0x00,  // 8
  0x0e,0x12,0x1e,0x02,0x02,0x00,  // 9
  0x18,0x18,0x00,0x18,0x18,0x00,  // :
  0x18,0x18,0x00,0x08,0x10,0x00,  // ;
  0x04,0x08,0x10,0x08,0x04,0x00,  // <
  0x00,0x1e,0x00,0x1e,0x00,0x00,  // =
  0x10,0x08,0x04,0x08,0x10,0x00,  // >
  0x00,0x00,0x00,0x00,0x00,0x00,  // ?
  0x00,0x00,0x00,0x00,0x00,0x00,  // @
  0x0c,0x12,0x1e,0x12,0x12,0x00,  // A
  0x1c,0x12,0x1e,0x12,0x1c,0x00,  // B
  0x0e,0x10,0x10,0x10,0x0e,0x00,  // C
  0x1c,0x12,0x12,0x12,0x1c,0x00,  // D
  0x1e,0x10,0x1c,0x10,0x1e,0x00,  // E
  0x1e,0x10,0x1c,0x10,0x10,0x00,  // F
  0x0c,0x10,0x14,0x12,0x0c,0x00,  // G
  0x12,0x12,0x1e,0x12,0x12,0x00,  // H
  0x0e,0x04,0x04,0x04,0x0e,0x00,  // I
  0x0e,0x04,0x04,0x04,0x04,0x0c,  // J
  0x12,0x14,0x18,0x18,0x14,0x12,  // K
  0x10,0x10,0x10,0x10,0x1e,0x00,  // L
  0x12,0x1e,0x1e,0x12,0x12,0x00,  // M
  0x12,0x1a,0x16,0x12,0x12,0x00,  // N
  0x0c,0x12,0x12,0x12,0x0c,0x00,  // O
  0x1c,0x12,0x1c,0x10,0x10,0x00,  // P
  0x0c,0x12,0x12,0x16,0x0c,0x02,  // Q
  0x1c,0x12,0x1e,0x14,0x12,0x00,  // R
  0x1e,0x10,0x1e,0x02,0x1e,0x00,  // S
  0x1c,0x08,0x08,0x08,0x08,0x00,  // T
  0x12,0x12,0x12,0x12,0x0c,0x00,  // U
  0x12,0x12,0x12,0x0c,0x0c,0x00,  // V
  0x12,0x12,0x0c,0x0c,0x00,0x00,  // W
  0x12,0x12,0x0c,0x0c,0x12,0x00,  // X
  0x12,0x12,0x0c,0x08,0x08,0x00,  // Y
  0x1e,0x02,0x04,0x08,0x1e,0x00,  // Z
  0x18,0x10,0x10,0x10,0x18,0x00,  // [
  0x00,0x00,0x00,0x00,0x00,0x00,  // <backslash>
  0x18,0x08,0x08,0x08,0x18,0x00,  // ]
  0x0c,0x0c,0x12,0x00,0x00,0x00,  // ^
  0x00,0x00,0x00,0x00,0x1e,0x00,  // _
  0x10,0x08,0x00,0x00,0x00,0x00,  // `
  0x0c,0x12,0x1e,0x12,0x12,0x00,  // A
  0x1c,0x12,0x1e,0x12,0x1c,0x00,  // B
  0x0e,0x10,0x10,0x10,0x0e,0x00,  // C
  0x1c,0x12,0x12,0x12,0x1c,0x00,  // D
  0x1e,0x10,0x1c,0x10,0x1e,0x00,  // E
  0x1e,0x10,0x1c,0x10,0x10,0x00,  // F
  0x0c,0x10,0x14,0x12,0x0c,0x00,  // G
  0x12,0x12,0x1e,0x12,0x12,0x00,  // H
  0x0e,0x04,0x04,0x04,0x0e,0x00,  // I
  0x0e,0x04,0x04,0x04,0x04,0x0c,  // J
  0x12,0x14,0x18,0x18,0x14,0x12,  // K
  0x10,0x10,0x10,0x10,0x1e,0x00,  // L
  0x12,0x1e,0x1e,0x12,0x12,0x00,  // M
  0x12,0x1a,0x16,0x12,0x12,0x00,  // N
  0x0c,0x12,0x12,0x12,0x0c,0x00,  // O
  0x1c,0x12,0x1c,0x10,0x10,0x00,  // P
  0x0c,0x12,0x12,0x16,0x0c,0x02,  // Q
  0x1c,0x12,0x1e,0x14,0x12,0x00,  // R
  0x1e,0x10,0x1e,0x02,0x1e,0x00,  // S
  0x1c,0x08,0x08,0x08,0x08,0x00,  // T
  0x12,0x12,0x12,0x12,0x0c,0x00,  // U
  0x12,0x12,0x12,0x0c,0x0c,0x00,  // V
  0x12,0x12,0x0c,0x0c,0x00,0x00,  // W
  0x12,0x12,0x0c,0x0c,0x12,0x00,  // X
  0x12,0x12,0x0c,0x08,0x08,0x00,  // Y
  0x1e,0x02,0x04,0x08,0x1e,0x00,  // Z
  0x04,0x08,0x18,0x08,0x04,0x00,  // {
  0x04,0x08,0x08,0x08,0x04,0x00,  // |
  0x08,0x08,0x0c,0x08,0x08,0x00,  // }
  0x0a,0x14,0x00,0x00,0x00,0x00,  // ~
};

const unsigned char minimal_5x5[] PROGMEM ={
  5,5,' ', 1, 0,                     //Width , Height , Start Char, Rotation, space
  0x00,0x00,0x00,0x00,0x00,  // <space>
  0x08,0x08,0x08,0x00,0x08,  // !
  0x14,0x14,0x14,0x00,0x00,  // "
  0x0a,0x1e,0x0a,0x1e,0x0a,  // #
  0x00,0x00,0x00,0x00,0x00,  // $
  0x12,0x04,0x08,0x09,0x00,  // %
  0x00,0x00,0x00,0x00,0x00,  // &
  0x08,0x08,0x08,0x00,0x00,  // '
  0x08,0x10,0x10,0x10,0x08,  // (
  0x10,0x08,0x08,0x08,0x10,  // )
  0x12,0x0c,0x1e,0x0c,0x12,  // *
  0x00,0x10,0x10,0x7c,0x10,  // +
  0x00,0x00,0x08,0x08,0x10,  // ,
  0x00,0x00,0x1e,0x00,0x00,  // -
  0x00,0x00,0x00,0x18,0x18,  // .
  0x04,0x04,0x08,0x08,0x10,  // /
  0x0c,0x12,0x12,0x12,0x0c,  // 0
  0x04,0x0c,0x04,0x04,0x0e, // 1
  0x1e,0x02,0x0c,0x10,0x1e,  // 2
  0x1c,0x02,0x0e,0x02,0x1c, // 3
  0x12,0x12,0x1e,0x02,0x02,  // 4
  0x1e,0x10,0x1e,0x02,0x1e,  // 5
  0x1e,0x10,0x1e,0x12,0x1e,  // 6
  0x1e,0x02,0x04,0x08,0x08,  // 7
  0x1e,0x12,0x1e,0x12,0x1e, // 8
  0x0e,0x12,0x1e,0x02,0x02,  // 9
  0x18,0x18,0x00,0x18,0x18,  // :
  0x18,0x18,0x00,0x08,0x10,  // ;
  0x04,0x08,0x10,0x08,0x04, // <
  0x00,0x1e,0x00,0x1e,0x00, // =
  0x10,0x08,0x04,0x08,0x10,  // >
  0x00,0x00,0x00,0x00,0x00,  // ?
  0x00,0x00,0x00,0x00,0x00,  // @
  0x0c,0x12,0x1e,0x12,0x12,  // A
  0x1c,0x12,0x1e,0x12,0x1c,  // B
  0x0e,0x10,0x10,0x10,0x0e,  // C
  0x1c,0x12,0x12,0x12,0x1c,  // D
  0x1e,0x10,0x1c,0x10,0x1e,  // E
  0x1e,0x10,0x1c,0x10,0x10,  // F
  0x0c,0x10,0x14,0x12,0x0c,  // G
  0x12,0x12,0x1e,0x12,0x12,  // H
  0x0e,0x04,0x04,0x04,0x0e,  // I
  0x0e,0x04,0x04,0x04,0x0c,  // J
  0x12,0x14,0x18,0x14,0x12,  // K
  0x10,0x10,0x10,0x10,0x1e,  // L
  0x12,0x1e,0x1e,0x12,0x12,  // M
  0x12,0x1a,0x16,0x12,0x12,  // N
  0x0c,0x12,0x12,0x12,0x0c,  // O
  0x1c,0x12,0x1c,0x10,0x10,  // P
  0x0c,0x12,0x16,0x0c,0x02,  // Q
  0x1c,0x12,0x1e,0x14,0x12, // R
  0x1e,0x10,0x1e,0x02,0x1e,  // S
  0x1c,0x08,0x08,0x08,0x08,  // T
  0x12,0x12,0x12,0x12,0x0c, // U
  0x12,0x12,0x12,0x0c,0x0c,  // V
  0x12,0x12,0x0c,0x0c,0x00,  // W
  0x12,0x12,0x0c,0x0c,0x12,  // X
  0x12,0x12,0x0c,0x08,0x08,  // Y
  0x1e,0x02,0x04,0x08,0x1e,  // Z
  0x18,0x10,0x10,0x10,0x18,  // [
  0x00,0x00,0x00,0x00,0x00, // <backslash>
  0x18,0x08,0x08,0x08,0x18,  // ]
  0x0c,0x0c,0x12,0x00,0x00,  // ^
  0x00,0x00,0x00,0x00,0x1e,  // _
  0x10,0x08,0x00,0x00,0x00,  // `
  0x0c,0x12,0x1e,0x12,0x12, // A
  0x1c,0x12,0x1e,0x12,0x1c,  // B
  0x0e,0x10,0x10,0x10,0x0e,  // C
  0x1c,0x12,0x12,0x12,0x1c,  // D
  0x1e,0x10,0x1c,0x10,0x1e,  // E
  0x1e,0x10,0x1c,0x10,0x10,  // F
  0x0c,0x10,0x14,0x12,0x0c, // G
  0x12,0x12,0x1e,0x12,0x12,  // H
  0x0e,0x04,0x04,0x04,0x0e,  // I
  0x0e,0x04,0x04,0x04,0x0c,  // J
  0x12,0x14,0x18,0x14,0x12,  // K
  0x10,0x10,0x10,0x10,0x1e,  // L
  0x12,0x1e,0x1e,0x12,0x12, // M
  0x12,0x1a,0x16,0x12,0x12,  // N
  0x0c,0x12,0x12,0x12,0x0c,  // O
  0x1c,0x12,0x1c,0x10,0x10,  // P
  0x0c,0x12,0x16,0x0c,0x02,  // Q
  0x1c,0x12,0x1e,0x14,0x12,  // R
  0x1e,0x10,0x1e,0x02,0x1e,  // S
  0x1c,0x08,0x08,0x08,0x08,  // T
  0x12,0x12,0x12,0x12,0x0c,  // U
  0x12,0x12,0x12,0x0c,0x0c,  // V
  0x12,0x12,0x0c,0x0c,0x00,  // W
  0x12,0x12,0x0c,0x0c,0x12,  // X
  0x12,0x12,0x0c,0x08,0x08, // Y
  0x1e,0x02,0x04,0x08,0x1e,  // Z
  0x04,0x08,0x18,0x08,0x04, // {
  0x04,0x08,0x08,0x08,0x04,  // |
  0x08,0x08,0x0c,0x08,0x08,  // }
  0x0a,0x14,0x00,0x00,0x00,  // ~
};

const unsigned char sinclair_8x8[] PROGMEM ={
   8,8,' ', 1, 1 ,                     //Width , Height , Start Char, Rotation , space
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // <space>
  0x08,0x08,0x08,0x08,0x08,0x00,0x08,0x00,  // !

  0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x00,  // "

  0x00,0x24,0x7E,0x24,0x24,0x7E,0x24,0x00,  // #
  0x10,0x7C,0x50,0x7C,0x14,0x7C,0x10,0x00,  // $
  0x00,0x62,0x64,0x08,0x10,0x26,0x46,0x00,  // %
  0x00,0x10,0x28,0x10,0x2A,0x44,0x3A,0x00,  // &
  0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,  // '
  0x00,0x08,0x10,0x10,0x10,0x10,0x08,0x00,  // (
  0x00,0x10,0x08,0x08,0x08,0x08,0x10,0x00,  // )
  0x00,0x00,0x28,0x10,0x7C,0x10,0x28,0x00,  // *
  0x00,0x00,0x10,0x10,0x7C,0x10,0x10,0x00,  // +
  0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x10,  // ,
  0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,  // -
  0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,  // .
  0x00,0x00,0x04,0x08,0x10,0x20,0x40,0x00,  // /

  0x00,0x78,0x8C,0x94,0xA4,0xC4,0x78,0x00,  // 0
  0x00,0x60,0xA0,0x20,0x20,0x20,0xF8,0x00,  // 1
  0x00,0x78,0x84,0x04,0x78,0x80,0xFC,0x00,  // 2
  0x00,0x78,0x84,0x18,0x04,0x84,0x78,0x00,  // 3
  0x00,0x10,0x30,0x50,0x90,0xFC,0x10,0x00,  // 4
  0x00,0xFC,0x80,0xF8,0x04,0x84,0x78,0x00,  // 5
  0x00,0x78,0x80,0xF8,0x84,0x84,0x78,0x00,  // 6
  0x00,0xFC,0x04,0x08,0x10,0x20,0x20,0x00,  // 7
  0x00,0x78,0x84,0x78,0x84,0x84,0x78,0x00,  // 8
  0x00,0x78,0x84,0x84,0x7C,0x04,0x78,0x00,  // 9
  0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x00,  // :
  0x00,0x00,0x10,0x00,0x00,0x10,0x10,0x20,  // ;
  0x00,0x00,0x08,0x10,0x20,0x10,0x08,0x00,  // <
  0x00,0x00,0x00,0x7C,0x00,0x7C,0x00,0x00,  // =
  0x00,0x00,0x20,0x10,0x08,0x10,0x20,0x00,  // >
  0x00,0x3C,0x42,0x04,0x08,0x00,0x08,0x00,  // ?

  0x00,0x3C,0x4A,0x56,0x5E,0x40,0x3C,0x00,  // @

  0x00,0x78,0x84,0x84,0xFC,0x84,0x84,0x00,  // A

  0x00,0xF8,0x84,0xF8,0x84,0x84,0xF8,0x00,  // B
  0x00,0x78,0x84,0x80,0x80,0x84,0x78,0x00,  // C
  0x00,0xF0,0x88,0x84,0x84,0x88,0xF0,0x00,  // D
  0x00,0xFC,0x80,0xF8,0x80,0x80,0xFC,0x00,  // E
  0x00,0xFC,0x80,0xF8,0x80,0x80,0x80,0x00,  // F
  0x00,0x78,0x84,0x80,0x9C,0x84,0x78,0x00,  // G
  0x00,0x84,0x84,0xFC,0x84,0x84,0x84,0x00,  // H
  0x00,0x7C,0x10,0x10,0x10,0x10,0x7C,0x00,  // I
  0x00,0x04,0x04,0x04,0x84,0x84,0x78,0x00,  // J
  0x00,0x88,0x90,0xE0,0x90,0x88,0x84,0x00,  // K
  0x00,0x80,0x80,0x80,0x80,0x80,0xFC,0x00,  // L
  0x00,0x84,0xCC,0xB4,0x84,0x84,0x84,0x00,  // M
  0x00,0x84,0xC4,0xA4,0x94,0x8C,0x84,0x00,  // N
  0x00,0x78,0x84,0x84,0x84,0x84,0x78,0x00,  // O

  0x00,0xF8,0x84,0x84,0xF8,0x80,0x80,0x00,  // P
  0x00,0x78,0x84,0x84,0xA4,0x94,0x78,0x00,  // Q
  0x00,0xF8,0x84,0x84,0xF8,0x88,0x84,0x00,  // R
  0x00,0x78,0x80,0x78,0x04,0x84,0x78,0x00,  // S
  0x00,0xFE,0x10,0x10,0x10,0x10,0x10,0x00,  // T
  0x00,0x84,0x84,0x84,0x84,0x84,0x78,0x00,  // U
  0x00,0x84,0x84,0x84,0x84,0x48,0x30,0x00,  // V
  0x00,0x84,0x84,0x84,0x84,0xB4,0x48,0x00,  // W
  0x00,0x84,0x48,0x30,0x30,0x48,0x84,0x00,  // X
  0x00,0x82,0x44,0x28,0x10,0x10,0x10,0x00,  // Y
  0x00,0xFC,0x08,0x10,0x20,0x40,0xFC,0x00,  // Z
  0x00,0x38,0x20,0x20,0x20,0x20,0x38,0x00,  // [
  0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x00,  // <backslash>
  0x00,0x38,0x08,0x08,0x08,0x08,0x38,0x00,  // ]
  0x00,0x10,0x38,0x54,0x10,0x10,0x10,0x00,  // ^
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,  // _

  0x3C,0x42,0x99,0xA1,0xA1,0x99,0x42,0x3C,  // `
  0x00,0x00,0x38,0x04,0x3C,0x44,0x3C,0x00,  // a
  0x00,0x40,0x40,0x78,0x44,0x44,0x78,0x00,  // b
  0x00,0x00,0x1C,0x20,0x20,0x20,0x1C,0x00,  // c
  0x00,0x04,0x04,0x3C,0x44,0x44,0x3C,0x00,  // d
  0x00,0x00,0x38,0x44,0x78,0x40,0x3C,0x00,  // e
  0x00,0x0C,0x10,0x18,0x10,0x10,0x10,0x00,  // f
  0x00,0x00,0x3E,0x42,0x42,0x3E,0x02,0x3C,  // g
  0x00,0x40,0x40,0x78,0x44,0x44,0x44,0x00,  // h
  0x00,0x08,0x00,0x18,0x08,0x08,0x1C,0x00,  // i
  0x00,0x04,0x00,0x04,0x04,0x04,0x24,0x18,  // j
  0x00,0x40,0x50,0x60,0x60,0x50,0x48,0x00,  // k
  0x00,0x10,0x10,0x10,0x10,0x10,0x0C,0x00,  // l
  0x00,0x00,0x68,0x54,0x54,0x54,0x54,0x00,  // m
  0x00,0x00,0x78,0x44,0x44,0x44,0x44,0x00,  // n
  0x00,0x00,0x38,0x44,0x44,0x44,0x38,0x00,  // o

  0x00,0x00,0x78,0x44,0x44,0x78,0x40,0x40,  // p
  0x00,0x00,0x3C,0x44,0x44,0x3C,0x04,0x06,  // q
  0x00,0x00,0x1C,0x20,0x20,0x20,0x20,0x00,  // r
  0x00,0x00,0x38,0x40,0x38,0x04,0x78,0x00,  // s
  0x00,0x10,0x38,0x10,0x10,0x10,0x0C,0x00,  // t
  0x00,0x00,0x44,0x44,0x44,0x44,0x38,0x00,  // u
  0x00,0x00,0x44,0x44,0x28,0x28,0x10,0x00,  // v
  0x00,0x00,0x44,0x54,0x54,0x54,0x28,0x00,  // w
  0x00,0x00,0x44,0x28,0x10,0x28,0x44,0x00,  // x
  0x00,0x00,0x44,0x44,0x44,0x3C,0x04,0x38,  // y
  0x00,0x00,0x7C,0x08,0x10,0x20,0x7C,0x00,  // z
  0x00,0x1C,0x10,0x60,0x10,0x10,0x1C,0x00,  // {
  0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x00,  // |
  0x00,0x70,0x10,0x0C,0x10,0x10,0x70,0x00,  // }
  0x00,0x14,0x28,0x00,0x00,0x00,0x00,0x00,  // ~
};


const unsigned char tinyfont_8x8 [] PROGMEM = {
  8,8,' ', 1, 0,                      //Width , Height , Start Char, Rotation , space
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // <Space>
  0x18,0x3C,0x3C,0x18,0x18,0x00,0x18,0x00, // !
  0x66,0x66,0x24,0x00,0x00,0x00,0x00,0x00, // "
  0x6C,0x6C,0xFE,0x6C,0xFE,0x6C,0x6C,0x00, // #
  0x18,0x3E,0x60,0x3C,0x06,0x7C,0x18,0x00, // $
  0x00,0xC6,0xCC,0x18,0x30,0x66,0xC6,0x00, // %
  0x38,0x6C,0x38,0x76,0xDC,0xCC,0x76,0x00, // &
  0x18,0x18,0x30,0x00,0x00,0x00,0x00,0x00, // '
  0x0C,0x18,0x30,0x30,0x30,0x18,0x0C,0x00, // (
  0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30,0x00, // )
  0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00, // *
  0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00, // +
  0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x30, // ,
  0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00, // -
  0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00, // .
  0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00, // /
  0x7C,0xC6,0xCE,0xD6,0xE6,0xC6,0x7C,0x00, // 0
  0x18,0x38,0x18,0x18,0x18,0x18,0x7E,0x00, // 1
  0x7C,0xC6,0x06,0x1C,0x30,0x66,0xFE,0x00, // 2
  0x7C,0xC6,0x06,0x3C,0x06,0xC6,0x7C,0x00, // 3
  0x1C,0x3C,0x6C,0xCC,0xFE,0x0C,0x1E,0x00, // 4
  0xFE,0xC0,0xC0,0xFC,0x06,0xC6,0x7C,0x00, // 5
  0x38,0x60,0xC0,0xFC,0xC6,0xC6,0x7C,0x00, // 6
  0xFE,0xC6,0x0C,0x18,0x30,0x30,0x30,0x00, // 7
  0x7C,0xC6,0xC6,0x7C,0xC6,0xC6,0x7C,0x00, // 8
  0x7C,0xC6,0xC6,0x7E,0x06,0x0C,0x78,0x00, // 9
  0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x00, // :
  0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x30, // ;
  0x06,0x0C,0x18,0x30,0x18,0x0C,0x06,0x00, // <
  0x00,0x00,0x7E,0x00,0x00,0x7E,0x00,0x00, // =
  0x60,0x30,0x18,0x0C,0x18,0x30,0x60,0x00, // >
  0x7C,0xC6,0x0C,0x18,0x18,0x00,0x18,0x00, // ?
  0x7C,0xC6,0xDE,0xDE,0xDE,0xC0,0x78,0x00, // @
  0x38,0x6C,0xC6,0xFE,0xC6,0xC6,0xC6,0x00, // A
  0xFC,0x66,0x66,0x7C,0x66,0x66,0xFC,0x00, // B
  0x3C,0x66,0xC0,0xC0,0xC0,0x66,0x3C,0x00, // C
  0xF8,0x6C,0x66,0x66,0x66,0x6C,0xF8,0x00, // D
  0xFE,0x62,0x68,0x78,0x68,0x62,0xFE,0x00, // E
  0xFE,0x62,0x68,0x78,0x68,0x60,0xF0,0x00, // F
  0x3C,0x66,0xC0,0xC0,0xCE,0x66,0x3A,0x00, // G
  0xC6,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0x00, // H
  0x3C,0x18,0x18,0x18,0x18,0x18,0x3C,0x00, // I
  0x1E,0x0C,0x0C,0x0C,0xCC,0xCC,0x78,0x00, // J
  0xE6,0x66,0x6C,0x78,0x6C,0x66,0xE6,0x00, // K
  0xF0,0x60,0x60,0x60,0x62,0x66,0xFE,0x00, // L
  0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0x00, // M
  0xC6,0xE6,0xF6,0xDE,0xCE,0xC6,0xC6,0x00, // N
  0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00, // O
  0xFC,0x66,0x66,0x7C,0x60,0x60,0xF0,0x00, // P
  0x7C,0xC6,0xC6,0xC6,0xC6,0xCE,0x7C,0x0E, // Q
  0xFC,0x66,0x66,0x7C,0x6C,0x66,0xE6,0x00, // R
  0x7C,0xC6,0x60,0x38,0x0C,0xC6,0x7C,0x00, // S
  0x7E,0x7E,0x5A,0x18,0x18,0x18,0x3C,0x00, // T
  0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00, // U
  0xC6,0xC6,0xC6,0xC6,0xC6,0x6C,0x38,0x00, // V
  0xC6,0xC6,0xC6,0xD6,0xD6,0xFE,0x6C,0x00, // W
  0xC6,0xC6,0x6C,0x38,0x6C,0xC6,0xC6,0x00, // X
  0x66,0x66,0x66,0x3C,0x18,0x18,0x3C,0x00, // Y
  0xFE,0xC6,0x8C,0x18,0x32,0x66,0xFE,0x00, // Z
  0x3C,0x30,0x30,0x30,0x30,0x30,0x3C,0x00, // [
  0xC0,0x60,0x30,0x18,0x0C,0x06,0x02,0x00, // <Backslash>
  0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00, // ]
  0x10,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00, // ^
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF, // _
  0x30,0x18,0x0C,0x00,0x00,0x00,0x00,0x00, // '
  0x00,0x00,0x78,0x0C,0x7C,0xCC,0x76,0x00, // a
  0xE0,0x60,0x7C,0x66,0x66,0x66,0xDC,0x00, // b
  0x00,0x00,0x7C,0xC6,0xC0,0xC6,0x7C,0x00, // c
  0x1C,0x0C,0x7C,0xCC,0xCC,0xCC,0x76,0x00, // d
  0x00,0x00,0x7C,0xC6,0xFE,0xC0,0x7C,0x00, // e
  0x3C,0x66,0x60,0xF8,0x60,0x60,0xF0,0x00, // f
  0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0xF8, // g
  0xE0,0x60,0x6C,0x76,0x66,0x66,0xE6,0x00, // h
  0x18,0x00,0x38,0x18,0x18,0x18,0x3C,0x00, // i
  0x06,0x00,0x06,0x06,0x06,0x66,0x66,0x3C, // j
  0xE0,0x60,0x66,0x6C,0x78,0x6C,0xE6,0x00, // k
  0x38,0x18,0x18,0x18,0x18,0x18,0x3C,0x00, // l
  0x00,0x00,0xEC,0xFE,0xD6,0xD6,0xD6,0x00, // m
  0x00,0x00,0xDC,0x66,0x66,0x66,0x66,0x00, // n
  0x00,0x00,0x7C,0xC6,0xC6,0xC6,0x7C,0x00, // o
  0x00,0x00,0xDC,0x66,0x66,0x7C,0x60,0xF0, // p
  0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0x1E, // q
  0x00,0x00,0xDC,0x76,0x60,0x60,0xF0,0x00, // r
  0x00,0x00,0x7E,0xC0,0x7C,0x06,0xFC,0x00, // s
  0x30,0x30,0xFC,0x30,0x30,0x36,0x1C,0x00, // t
  0x00,0x00,0xCC,0xCC,0xCC,0xCC,0x76,0x00, // u
  0x00,0x00,0xC6,0xC6,0xC6,0x6C,0x38,0x00, // v
  0x00,0x00,0xC6,0xD6,0xD6,0xFE,0x6C,0x00, // w
  0x00,0x00,0xC6,0x6C,0x38,0x6C,0xC6,0x00, // x
  0x00,0x00,0xC6,0xC6,0xC6,0x7E,0x06,0xFC, // y
  0x00,0x00,0x7E,0x4C,0x18,0x32,0x7E,0x00, // z
  0x0E,0x18,0x18,0x70,0x18,0x18,0x0E,0x00, // {
  0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00, // |
  0x70,0x18,0x18,0x0E,0x18,0x18,0x70,0x00, // }
  0x76,0xDC,0x00,0x00,0x00,0x00,0x00,0x00 // ~
};

// FONT5X7_H
static const unsigned char small_5x7[] PROGMEM = {
  5,7,0,0, 1,   //Width , Height , Start Char, Rotation, space
  0x00, 0x00, 0x00, 0x00, 0x00,
	0x3E, 0x5B, 0x4F, 0x5B, 0x3E,
	0x3E, 0x6B, 0x4F, 0x6B, 0x3E,
	0x1C, 0x3E, 0x7C, 0x3E, 0x1C,
	0x18, 0x3C, 0x7E, 0x3C, 0x18,
	0x1C, 0x57, 0x7D, 0x57, 0x1C,
	0x1C, 0x5E, 0x7F, 0x5E, 0x1C,
	0x00, 0x18, 0x3C, 0x18, 0x00,
	0xFF, 0xE7, 0xC3, 0xE7, 0xFF,
	0x00, 0x18, 0x24, 0x18, 0x00,
	0xFF, 0xE7, 0xDB, 0xE7, 0xFF,
	0x30, 0x48, 0x3A, 0x06, 0x0E,
	0x26, 0x29, 0x79, 0x29, 0x26,
	0x40, 0x7F, 0x05, 0x05, 0x07,
	0x40, 0x7F, 0x05, 0x25, 0x3F,
	0x5A, 0x3C, 0xE7, 0x3C, 0x5A,
	0x7F, 0x3E, 0x1C, 0x1C, 0x08,
	0x08, 0x1C, 0x1C, 0x3E, 0x7F,
	0x14, 0x22, 0x7F, 0x22, 0x14,
	0x5F, 0x5F, 0x00, 0x5F, 0x5F,
	0x06, 0x09, 0x7F, 0x01, 0x7F,
	0x00, 0x66, 0x89, 0x95, 0x6A,
	0x60, 0x60, 0x60, 0x60, 0x60,
	0x94, 0xA2, 0xFF, 0xA2, 0x94,
	0x08, 0x04, 0x7E, 0x04, 0x08,
	0x10, 0x20, 0x7E, 0x20, 0x10,
	0x08, 0x08, 0x2A, 0x1C, 0x08,
	0x08, 0x1C, 0x2A, 0x08, 0x08,
	0x1E, 0x10, 0x10, 0x10, 0x10,
	0x0C, 0x1E, 0x0C, 0x1E, 0x0C,
	0x30, 0x38, 0x3E, 0x38, 0x30,
	0x06, 0x0E, 0x3E, 0x0E, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x5F, 0x00, 0x00,
	0x00, 0x07, 0x00, 0x07, 0x00,
	0x14, 0x7F, 0x14, 0x7F, 0x14,
	0x24, 0x2A, 0x7F, 0x2A, 0x12,
	0x23, 0x13, 0x08, 0x64, 0x62,
	0x36, 0x49, 0x56, 0x20, 0x50,
	0x00, 0x08, 0x07, 0x03, 0x00,
	0x00, 0x1C, 0x22, 0x41, 0x00,
	0x00, 0x41, 0x22, 0x1C, 0x00,
	0x2A, 0x1C, 0x7F, 0x1C, 0x2A,
	0x08, 0x08, 0x3E, 0x08, 0x08,
	0x00, 0x80, 0x70, 0x30, 0x00,
	0x08, 0x08, 0x08, 0x08, 0x08,
	0x00, 0x00, 0x60, 0x60, 0x00,
	0x20, 0x10, 0x08, 0x04, 0x02,
	0x3E, 0x51, 0x49, 0x45, 0x3E,
	0x00, 0x42, 0x7F, 0x40, 0x00,
	0x72, 0x49, 0x49, 0x49, 0x46,
	0x21, 0x41, 0x49, 0x4D, 0x33,
	0x18, 0x14, 0x12, 0x7F, 0x10,
	0x27, 0x45, 0x45, 0x45, 0x39,
	0x3C, 0x4A, 0x49, 0x49, 0x31,
	0x41, 0x21, 0x11, 0x09, 0x07,
	0x36, 0x49, 0x49, 0x49, 0x36,
	0x46, 0x49, 0x49, 0x29, 0x1E,
	0x00, 0x00, 0x14, 0x00, 0x00,
	0x00, 0x40, 0x34, 0x00, 0x00,
	0x00, 0x08, 0x14, 0x22, 0x41,
	0x14, 0x14, 0x14, 0x14, 0x14,
	0x00, 0x41, 0x22, 0x14, 0x08,
	0x02, 0x01, 0x59, 0x09, 0x06,
	0x3E, 0x41, 0x5D, 0x59, 0x4E,
	0x7C, 0x12, 0x11, 0x12, 0x7C,
	0x7F, 0x49, 0x49, 0x49, 0x36,
	0x3E, 0x41, 0x41, 0x41, 0x22,
	0x7F, 0x41, 0x41, 0x41, 0x3E,
	0x7F, 0x49, 0x49, 0x49, 0x41,
	0x7F, 0x09, 0x09, 0x09, 0x01,
	0x3E, 0x41, 0x41, 0x51, 0x73,
	0x7F, 0x08, 0x08, 0x08, 0x7F,
	0x00, 0x41, 0x7F, 0x41, 0x00,
	0x20, 0x40, 0x41, 0x3F, 0x01,
	0x7F, 0x08, 0x14, 0x22, 0x41,
	0x7F, 0x40, 0x40, 0x40, 0x40,
	0x7F, 0x02, 0x1C, 0x02, 0x7F,
	0x7F, 0x04, 0x08, 0x10, 0x7F,
	0x3E, 0x41, 0x41, 0x41, 0x3E,
	0x7F, 0x09, 0x09, 0x09, 0x06,
	0x3E, 0x41, 0x51, 0x21, 0x5E,
	0x7F, 0x09, 0x19, 0x29, 0x46,
	0x26, 0x49, 0x49, 0x49, 0x32,
	0x03, 0x01, 0x7F, 0x01, 0x03,
	0x3F, 0x40, 0x40, 0x40, 0x3F,
	0x1F, 0x20, 0x40, 0x20, 0x1F,
	0x3F, 0x40, 0x38, 0x40, 0x3F,
	0x63, 0x14, 0x08, 0x14, 0x63,
	0x03, 0x04, 0x78, 0x04, 0x03,
	0x61, 0x59, 0x49, 0x4D, 0x43,
	0x00, 0x7F, 0x41, 0x41, 0x41,
	0x02, 0x04, 0x08, 0x10, 0x20,
	0x00, 0x41, 0x41, 0x41, 0x7F,
	0x04, 0x02, 0x01, 0x02, 0x04,
	0x40, 0x40, 0x40, 0x40, 0x40,
	0x00, 0x03, 0x07, 0x08, 0x00,
	0x20, 0x54, 0x54, 0x78, 0x40,
	0x7F, 0x28, 0x44, 0x44, 0x38,
	0x38, 0x44, 0x44, 0x44, 0x28,
	0x38, 0x44, 0x44, 0x28, 0x7F,
	0x38, 0x54, 0x54, 0x54, 0x18,
	0x00, 0x08, 0x7E, 0x09, 0x02,
	0x18, 0xA4, 0xA4, 0x9C, 0x78,
	0x7F, 0x08, 0x04, 0x04, 0x78,
	0x00, 0x44, 0x7D, 0x40, 0x00,
	0x20, 0x40, 0x40, 0x3D, 0x00,
	0x7F, 0x10, 0x28, 0x44, 0x00,
	0x00, 0x41, 0x7F, 0x40, 0x00,
	0x7C, 0x04, 0x78, 0x04, 0x78,
	0x7C, 0x08, 0x04, 0x04, 0x78,
	0x38, 0x44, 0x44, 0x44, 0x38,
	0xFC, 0x18, 0x24, 0x24, 0x18,
	0x18, 0x24, 0x24, 0x18, 0xFC,
	0x7C, 0x08, 0x04, 0x04, 0x08,
	0x48, 0x54, 0x54, 0x54, 0x24,
	0x04, 0x04, 0x3F, 0x44, 0x24,
	0x3C, 0x40, 0x40, 0x20, 0x7C,
	0x1C, 0x20, 0x40, 0x20, 0x1C,
	0x3C, 0x40, 0x30, 0x40, 0x3C,
	0x44, 0x28, 0x10, 0x28, 0x44,
	0x4C, 0x90, 0x90, 0x90, 0x7C,
	0x44, 0x64, 0x54, 0x4C, 0x44,
	0x00, 0x08, 0x36, 0x41, 0x00,
	0x00, 0x00, 0x77, 0x00, 0x00,
	0x00, 0x41, 0x36, 0x08, 0x00,
	0x02, 0x01, 0x02, 0x04, 0x02,
	0x3C, 0x26, 0x23, 0x26, 0x3C,
	0x1E, 0xA1, 0xA1, 0x61, 0x12,
	0x3A, 0x40, 0x40, 0x20, 0x7A,
	0x38, 0x54, 0x54, 0x55, 0x59,
	0x21, 0x55, 0x55, 0x79, 0x41,
	0x21, 0x54, 0x54, 0x78, 0x41,
	0x21, 0x55, 0x54, 0x78, 0x40,
	0x20, 0x54, 0x55, 0x79, 0x40,
	0x0C, 0x1E, 0x52, 0x72, 0x12,
	0x39, 0x55, 0x55, 0x55, 0x59,
	0x39, 0x54, 0x54, 0x54, 0x59,
	0x39, 0x55, 0x54, 0x54, 0x58,
	0x00, 0x00, 0x45, 0x7C, 0x41,
	0x00, 0x02, 0x45, 0x7D, 0x42,
	0x00, 0x01, 0x45, 0x7C, 0x40,
	0xF0, 0x29, 0x24, 0x29, 0xF0,
	0xF0, 0x28, 0x25, 0x28, 0xF0,
	0x7C, 0x54, 0x55, 0x45, 0x00,
	0x20, 0x54, 0x54, 0x7C, 0x54,
	0x7C, 0x0A, 0x09, 0x7F, 0x49,
	0x32, 0x49, 0x49, 0x49, 0x32,
	0x32, 0x48, 0x48, 0x48, 0x32,
	0x32, 0x4A, 0x48, 0x48, 0x30,
	0x3A, 0x41, 0x41, 0x21, 0x7A,
	0x3A, 0x42, 0x40, 0x20, 0x78,
	0x00, 0x9D, 0xA0, 0xA0, 0x7D,
	0x39, 0x44, 0x44, 0x44, 0x39,
	0x3D, 0x40, 0x40, 0x40, 0x3D,
	0x3C, 0x24, 0xFF, 0x24, 0x24,
	0x48, 0x7E, 0x49, 0x43, 0x66,
	0x2B, 0x2F, 0xFC, 0x2F, 0x2B,
	0xFF, 0x09, 0x29, 0xF6, 0x20,
	0xC0, 0x88, 0x7E, 0x09, 0x03,
	0x20, 0x54, 0x54, 0x79, 0x41,
	0x00, 0x00, 0x44, 0x7D, 0x41,
	0x30, 0x48, 0x48, 0x4A, 0x32,
	0x38, 0x40, 0x40, 0x22, 0x7A,
	0x00, 0x7A, 0x0A, 0x0A, 0x72,
	0x7D, 0x0D, 0x19, 0x31, 0x7D,
	0x26, 0x29, 0x29, 0x2F, 0x28,
	0x26, 0x29, 0x29, 0x29, 0x26,
	0x30, 0x48, 0x4D, 0x40, 0x20,
	0x38, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x38,
	0x2F, 0x10, 0xC8, 0xAC, 0xBA,
	0x2F, 0x10, 0x28, 0x34, 0xFA,
	0x00, 0x00, 0x7B, 0x00, 0x00,
	0x08, 0x14, 0x2A, 0x14, 0x22,
	0x22, 0x14, 0x2A, 0x14, 0x08,
	0xAA, 0x00, 0x55, 0x00, 0xAA,
	0xAA, 0x55, 0xAA, 0x55, 0xAA,
	0x00, 0x00, 0x00, 0xFF, 0x00,
	0x10, 0x10, 0x10, 0xFF, 0x00,
	0x14, 0x14, 0x14, 0xFF, 0x00,
	0x10, 0x10, 0xFF, 0x00, 0xFF,
	0x10, 0x10, 0xF0, 0x10, 0xF0,
	0x14, 0x14, 0x14, 0xFC, 0x00,
	0x14, 0x14, 0xF7, 0x00, 0xFF,
	0x00, 0x00, 0xFF, 0x00, 0xFF,
	0x14, 0x14, 0xF4, 0x04, 0xFC,
	0x14, 0x14, 0x17, 0x10, 0x1F,
	0x10, 0x10, 0x1F, 0x10, 0x1F,
	0x14, 0x14, 0x14, 0x1F, 0x00,
	0x10, 0x10, 0x10, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x1F, 0x10,
	0x10, 0x10, 0x10, 0x1F, 0x10,
	0x10, 0x10, 0x10, 0xF0, 0x10,
	0x00, 0x00, 0x00, 0xFF, 0x10,
	0x10, 0x10, 0x10, 0x10, 0x10,
	0x10, 0x10, 0x10, 0xFF, 0x10,
	0x00, 0x00, 0x00, 0xFF, 0x14,
	0x00, 0x00, 0xFF, 0x00, 0xFF,
	0x00, 0x00, 0x1F, 0x10, 0x17,
	0x00, 0x00, 0xFC, 0x04, 0xF4,
	0x14, 0x14, 0x17, 0x10, 0x17,
	0x14, 0x14, 0xF4, 0x04, 0xF4,
	0x00, 0x00, 0xFF, 0x00, 0xF7,
	0x14, 0x14, 0x14, 0x14, 0x14,
	0x14, 0x14, 0xF7, 0x00, 0xF7,
	0x14, 0x14, 0x14, 0x17, 0x14,
	0x10, 0x10, 0x1F, 0x10, 0x1F,
	0x14, 0x14, 0x14, 0xF4, 0x14,
	0x10, 0x10, 0xF0, 0x10, 0xF0,
	0x00, 0x00, 0x1F, 0x10, 0x1F,
	0x00, 0x00, 0x00, 0x1F, 0x14,
	0x00, 0x00, 0x00, 0xFC, 0x14,
	0x00, 0x00, 0xF0, 0x10, 0xF0,
	0x10, 0x10, 0xFF, 0x10, 0xFF,
	0x14, 0x14, 0x14, 0xFF, 0x14,
	0x10, 0x10, 0x10, 0x1F, 0x00,
	0x00, 0x00, 0x00, 0xF0, 0x10,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
	0xFF, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0xFF,
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
	0x38, 0x44, 0x44, 0x38, 0x44,
	0x7C, 0x2A, 0x2A, 0x3E, 0x14,
	0x7E, 0x02, 0x02, 0x06, 0x06,
	0x02, 0x7E, 0x02, 0x7E, 0x02,
	0x63, 0x55, 0x49, 0x41, 0x63,
	0x38, 0x44, 0x44, 0x3C, 0x04,
	0x40, 0x7E, 0x20, 0x1E, 0x20,
	0x06, 0x02, 0x7E, 0x02, 0x02,
	0x99, 0xA5, 0xE7, 0xA5, 0x99,
	0x1C, 0x2A, 0x49, 0x2A, 0x1C,
	0x4C, 0x72, 0x01, 0x72, 0x4C,
	0x30, 0x4A, 0x4D, 0x4D, 0x30,
	0x30, 0x48, 0x78, 0x48, 0x30,
	0xBC, 0x62, 0x5A, 0x46, 0x3D,
	0x3E, 0x49, 0x49, 0x49, 0x00,
	0x7E, 0x01, 0x01, 0x01, 0x7E,
	0x2A, 0x2A, 0x2A, 0x2A, 0x2A,
	0x44, 0x44, 0x5F, 0x44, 0x44,
	0x40, 0x51, 0x4A, 0x44, 0x40,
	0x40, 0x44, 0x4A, 0x51, 0x40,
	0x00, 0x00, 0xFF, 0x01, 0x03,
	0xE0, 0x80, 0xFF, 0x00, 0x00,
	0x08, 0x08, 0x6B, 0x6B, 0x08,
	0x36, 0x12, 0x36, 0x24, 0x36,
	0x06, 0x0F, 0x09, 0x0F, 0x06,
	0x00, 0x00, 0x18, 0x18, 0x00,
	0x00, 0x00, 0x10, 0x10, 0x00,
	0x30, 0x40, 0xFF, 0x01, 0x01,
	0x00, 0x1F, 0x01, 0x01, 0x1E,
	0x00, 0x19, 0x1D, 0x17, 0x12,
	0x00, 0x3C, 0x3C, 0x3C, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00
};

// 11 * 7 digital font
const PROGMEM uint8_t digitals_11x7[] = {
    11,7,'0',1 , 1, //Width , Height , Start Char, Rotation , space
    0x1C, 0x36, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x36, 0x1C,  // 0
    0x18, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E,  // 1
    0x3E, 0x63, 0x63, 0x63, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x63, 0x7F,  // 2
    0x3E, 0x63, 0x63, 0x06, 0x1C, 0x06, 0x03, 0x03, 0x63, 0x66, 0x3C,  // 3
    0x06, 0x0E, 0x1E, 0x36, 0x36, 0x66, 0x66, 0x7F, 0x06, 0x06, 0x1F,  // 4
    0x7F, 0x60, 0x60, 0x60, 0x7C, 0x76, 0x03, 0x03, 0x63, 0x66, 0x3C,  // 5
    0x1E, 0x36, 0x60, 0x60, 0x7C, 0x76, 0x63, 0x63, 0x63, 0x36, 0x1C,  // 6
    0x7F, 0x66, 0x66, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,  // 7
    0x3E, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x63, 0x63, 0x3E,  // 8
    0x1C, 0x36, 0x63, 0x63, 0x63, 0x37, 0x1F, 0x03, 0x03, 0x36, 0x3C,  // 9
};

#endif
